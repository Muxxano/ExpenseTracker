{"ast":null,"code":"var _jsxFileName = \"D:\\\\practice\\\\react\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter/ExpensesFilter\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [yearFilter, setYearFilter] = useState(\"2020\");\n  const [filteredExpenses, setFilteredExpenses] = useState(props.expenses);\n  const filterHandller = year => {\n    console.log(year);\n    setYearFilter(year);\n    setFilteredExpenses(filteredExpenses.filter(expense => expense.date.getFullYear() === year));\n    console.log(filteredExpenses);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      value: yearFilter,\n      onFilter: filterHandller\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"M67S5x8u8yk3AxjwLKlJn4tld1c=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","Card","ExpensesFilter","React","useState","Expenses","props","yearFilter","setYearFilter","filteredExpenses","setFilteredExpenses","expenses","filterHandller","year","console","log","filter","expense","date","getFullYear","map","title","amount","id"],"sources":["D:/practice/react/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpenseFilter/ExpensesFilter\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Expenses(props) {\r\n  const [yearFilter, setYearFilter] = useState(\"2020\");\r\n  const [filteredExpenses, setFilteredExpenses] = useState(props.expenses);\r\n\r\n  const filterHandller = (year) => {\r\n    console.log(year);\r\n    setYearFilter(year);\r\n\r\n    setFilteredExpenses(\r\n      filteredExpenses.filter((expense) => expense.date.getFullYear() === year)\r\n    );\r\n    console.log(filteredExpenses);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter value={yearFilter} onFilter={filterHandller} />\r\n      {filteredExpenses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAM,CAACK,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGN,QAAQ,CAACE,KAAK,CAACK,QAAQ,CAAC;EAExE,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBL,aAAa,CAACK,IAAI,CAAC;IAEnBH,mBAAmB,CACjBD,gBAAgB,CAACO,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,KAAKN,IAAI,CAAC,CAC1E;IACDC,OAAO,CAACC,GAAG,CAACN,gBAAgB,CAAC;EAC/B,CAAC;EAED,oBACE,QAAC,IAAI;IAAC,SAAS,EAAC,UAAU;IAAA,wBACxB,QAAC,cAAc;MAAC,KAAK,EAAEF,UAAW;MAAC,QAAQ,EAAEK;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,EAC9DH,gBAAgB,CAACW,GAAG,CAAEH,OAAO,iBAC5B,QAAC,WAAW;MAEV,KAAK,EAAEA,OAAO,CAACI,KAAM;MACrB,MAAM,EAAEJ,OAAO,CAACK,MAAO;MACvB,IAAI,EAAEL,OAAO,CAACC;IAAK,GAHdD,OAAO,CAACM,EAAE;MAAA;MAAA;MAAA;IAAA,QAKlB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEX;AAAC,GA3BQlB,QAAQ;AAAA,KAARA,QAAQ;AA6BjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}